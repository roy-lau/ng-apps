{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/hero-search/hero-search.component.ts","webpack:///src/app/hero-search/hero-search.component.html","webpack:///src/app/hero.service.ts","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/in-memory-data.service.ts","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","dataEncapsulation","declarations","providers","bootstrap","DashboardComponent","heroService","heroes","getHeroes","subscribe","slice","HeroDetailComponent","route","location","getHero","snapshot","paramMap","get","hero","back","updateHero","goBack","HeroSearchComponent","searchTerms","term","next","heroes$","pipe","searchHeroes","search","HeroService","http","messageService","httpOptions","headers","heroesUrl","message","add","operation","result","error","console","log","url","_","handleError","put","post","newHero","delete","trim","x","length","providedIn","HeroesComponent","name","addHero","push","filter","h","deleteHero","InMemoryDataService","Math","max","map","MessageService","messages","MessagesComponent","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent }  from './hero-detail/hero-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'heroes', component: HeroesComponent },\n  { path: 'detail/:id', component: HeroDetailComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.styl']\n})\nexport class AppComponent {\n  title = 'hero-app';\n}\n","<header>\n  <h1>{{title}}</h1>\n  <nav>\n    <a routerLink=\"/dashboard\">Dashboard</a>\n    <a routerLink=\"/heroes\">Heroes</a>\n  </nav>\n</header>\n<router-outlet></router-outlet>\n<hr />\n<app-messages></app-messages>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\nimport { HeroSearchComponent } from './hero-search/hero-search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    DashboardComponent,\n    HeroSearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    ),\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.styl']\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes.slice(1, 5));\n  }\n\n}\n","<h2>Top Heroes: </h2>\n\n<app-hero-search></app-hero-search>\n\n<div class=\"grid grid-pad\">\n  <a *ngFor=\"let hero of heroes\" class=\"col-1-4\"\n      routerLink=\"/detail/{{hero.id}}\">\n    <div class=\"module hero\">\n      <h4>{{hero.name}}</h4>\n    </div>\n  </a>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.styl']\n})\nexport class HeroDetailComponent implements OnInit {\n  @Input() hero: Hero;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  getHero(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.heroService.getHero(id)\n      .subscribe(hero => this.hero = hero);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    this.heroService.updateHero(this.hero)\n      .subscribe(() => this.goBack());\n  }\n}\n","<div *ngIf=\"hero\" class=\"hero-detail\">\n  <h2>[ {{hero.name | uppercase}} ] Details</h2>\n  <div><span>id: </span>{{hero.id}}</div>\n  <div>\n    <label>name:\n      <input [(ngModel)]=\"hero.name\" placeholder=\"name\" />\n    </label>\n  </div>\n  <button (click)=\"goBack()\">go back</button>\n  <button (click)=\"save()\">update</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n  debounceTime, distinctUntilChanged, switchMap\n} from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: ['./hero-search.component.styl']\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) { }\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(), // distinctUntilChanged() 会确保只在过滤条件变化时才发送请求。\n\n      // switch to new search observable each time the term changes\n      // switchMap() 会为每个从 debounce() 和 distinctUntilChanged() 中通过的搜索词调用搜索服务。 它会取消并丢弃以前的搜索可观察对象，只保留最近的。\n      switchMap((term: string) => this.heroService.searchHeroes(term)),\n    );\n  }\n\n}\n","<div id=\"search-component\">\n  <h4><label for=\"search-box\">Hero Search: </label></h4>\n\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" placeholder=\"search hero\" />\n\n  <ul class=\"search-result\">\n    <li *ngFor=\"let hero of heroes$ | async\" >\n      <a routerLink=\"/detail/{{hero.id}}\">\n        {{hero.name}}\n      </a>\n    </li>\n  </ul>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { MessageService } from './message.service';\n\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n\n  private heroesUrl = 'api/heroes';  // URL to web api\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n\n  /** GET hero by id. Will 404 if id not found */\n  getHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get<Hero>(url).pipe(\n      tap(_ => this.log(`fetched hero id=${id}`)),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n  }\n\n  /** GET heroes from the server */\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n      .pipe(\n        tap(_ => this.log('fetched heroes')),\n        catchError(this.handleError<Hero[]>('getHeroes', []))\n      );\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero(hero: Hero): Observable<any> {\n\n    // HttpClient.put() 方法接受三个参数：\n    //   URL 地址\n    //   要修改的数据（这里就是修改后的英雄）\n    //   选项\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n\n  /** POST: add a new hero to the server */\n  addHero(hero: Hero): Observable<Hero> {\n\n    // addHero() 和 updateHero() 有两点不同。\n    //   它调用 HttpClient.post() 而不是 put()。\n    //   它期待服务器为这个新的英雄生成一个 id，然后把它通过 Observable<Hero> 返回给调用者。\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteHero(hero: Hero | number): Observable<Hero> {\n    const id = typeof hero === 'number' ? hero : hero.id;\n    const url = `${this.heroesUrl}/${id}`;\n\n    // deleteHero() 调用了 HttpClient.delete()。\n    // URL 就是英雄的资源 URL 加上要删除的英雄的 id。\n    // 你不用像 put() 和 post() 中那样发送任何数据。\n    // 你仍要发送 httpOptions。\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  /* GET heroes whose name contains search term */\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\n      tap(x => x.length ?\n        this.log(`found heroes matching \"${term}\"`) :\n        this.log(`no heroes matching \"${term}\"`)),\n      catchError(this.handleError<Hero[]>('searchHeroes', []))\n    );\n  }\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Hero } from '../hero';\n\nimport { HeroService } from '../hero.service';\nimport { MessageService } from '../message.service';\n\n// selector— 组件的选择器（CSS 元素选择器）\n// templateUrl— 组件模板文件的位置。\n// styleUrls— 组件私有 CSS 样式表文件的位置。\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.styl']\n})\n\n// ngOnInit() 是一个生命周期钩子，Angular 在创建完组件后很快就会调用 ngOnInit()。这里是放置初始化逻辑的好地方。\n// 始终要 export 这个组件类，以便在其它地方（比如 AppModule）导入它。\n\nexport class HeroesComponent implements OnInit {\n  heroes: Hero[];\n  selectedHero: Hero;\n\n  constructor(private heroService: HeroService,\n    private messageService: MessageService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  // 获取英雄们\n  getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes);\n  }\n\n  add(name: string): void {\n    name = name.trim();\n    if (!name) { return; }\n    this.heroService.addHero({ name } as Hero)\n      .subscribe(hero => {\n        this.heroes.push(hero);\n      });\n  }\n\n  delete(hero: Hero): void {\n    this.heroes = this.heroes.filter(h => h !== hero);\n    this.heroService.deleteHero(hero).subscribe();\n  }\n\n}\n","<h2>My Heroes: </h2>\n\n<div class=\"heroe-add\">\n  <label>Hero name:\n    <input #heroName />\n  </label>\n  <!-- (click) passes input value to add() and then clears the input -->\n  <button (click)=\"add(heroName.value); heroName.value=''\">\n    add\n  </button>\n</div>\n\n\n<ul class=\"heroes\">\n  <li *ngFor=\"let hero of heroes\">\n    <a routerLink=\"/detail/{{hero.id}}\">\n      <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n    </a>\n    <button class=\"delete\" title=\"delete hero\"\n      (click)=\"delete(hero)\">x</button>\n  </li>\n</ul>","\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Hero } from './hero';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const heroes = [\n      { id: 11, name: 'Dr Nice' },\n      { id: 12, name: 'Narco' },\n      { id: 13, name: 'Bombasto' },\n      { id: 14, name: 'Celeritas' },\n      { id: 15, name: 'Magneta' },\n      { id: 16, name: 'RubberMan' },\n      { id: 17, name: 'Dynama' },\n      { id: 18, name: 'Dr IQ' },\n      { id: 19, name: 'Magma' },\n      { id: 20, name: 'Tornado' }\n    ];\n    return {heroes};\n  }\n\n  // Overrides the genId method to ensure that a hero always has an id.\n  // If the heroes array is empty,\n  // the method below returns the initial number (11).\n  // if the heroes array is not empty, the method below returns the highest\n  // hero id + 1.\n  genId(heroes: Hero[]): number {\n    return heroes.length > 0 ? Math.max(...heroes.map(hero => hero.id)) + 1 : 11;\n  }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.styl']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n\n  <h2>Messages</h2>\n  <button class=\"clear\"\n          (click)=\"messageService.clear()\">clear</button>\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}